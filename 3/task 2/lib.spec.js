const { getClaimsGrid, getNonOverlappingClaimId } = require('./lib');

describe('day 3', () => {
  describe('task 2', () => {
    it('getClaimsGrid', () => {
      expect(getClaimsGrid(['#1 @ 1,3: 4x4'], 8, 8)).toEqual([
        [[ ], [ ], [ ], [ ], [ ], [ ], [ ], [ ]],
        [[ ], [ ], [ ], [ ], [ ], [ ], [ ], [ ]],
        [[ ], [ ], [ ], [ ], [ ], [ ], [ ], [ ]],
        [[ ], [1], [1], [1], [1], [ ], [ ], [ ]],
        [[ ], [1], [1], [1], [1], [ ], [ ], [ ]],
        [[ ], [1], [1], [1], [1], [ ], [ ], [ ]],
        [[ ], [1], [1], [1], [1], [ ], [ ], [ ]],
        [[ ], [ ], [ ], [ ], [ ], [ ], [ ], [ ]],
      ]);
    });

    it('getClaimsGrid', () => {
      expect(getClaimsGrid([
        '#1 @ 1,3: 4x4',
        '#2 @ 3,1: 4x4',
        '#3 @ 5,5: 2x2',
      ], 8, 8)).toEqual([
        [[ ], [ ], [ ], [    ], [    ], [ ], [ ], [ ]],
        [[ ], [ ], [ ], [2   ], [2   ], [2], [2], [ ]],
        [[ ], [ ], [ ], [2   ], [2   ], [2], [2], [ ]],
        [[ ], [1], [1], [1, 2], [1, 2], [2], [2], [ ]],
        [[ ], [1], [1], [1, 2], [1, 2], [2], [2], [ ]],
        [[ ], [1], [1], [1   ], [1   ], [3], [3], [ ]],
        [[ ], [1], [1], [1   ], [1   ], [3], [3], [ ]],
        [[ ], [ ], [ ], [    ], [    ], [ ], [ ], [ ]],
      ]);
    });

    it('getNonOverlappingClaimId', () => {
      expect(
        getNonOverlappingClaimId([
          '#1 @ 1,3: 4x4',
          '#2 @ 3,1: 4x4',
          '#3 @ 5,5: 2x2',
        ])
      ).toBe(3);
    });
  });
});